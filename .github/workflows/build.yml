name: build

on:
  # trigger deployment on every push to main branch
  push:
    branches: [ main, master ]
  # trigger deployment manually
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          # choose node.js version to use
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Handle yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-yarn-
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: yarn --frozen-lockfile

      # run build script
      - name: Build Vue site
        run: yarn build

      # please check out the docs of the workflow for more details
      # @see https://github.com/crazy-max/ghaction-github-pages
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v2
        with:
          # deploy to gh-pages branch
          target_branch: gh-pages
          # deploy the default output dir of Vue
          build_dir: dist
        env:
          # @see https://docs.github.com/en/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create artifacts
        uses: actions/upload-artifact@v2
        with:
          name: shaders
          path: dist/dl

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: tag-${{ steps.date.outputs.date }}
          name: release-${{ steps.date.outputs.date }}
          artifacts: "shaders.zip"
          token: ${{ secrets.GITHUB_TOKEN }}