name: release

on:
  # trigger deployment on every push to main branch
  push:
    branches: main
  # trigger deployment manually
  workflow_dispatch:

jobs:
  check:
    name: Check files
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD
          
          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file != shaders/* || $file != pipelines/* ]]; then
              echo "This modified file is not in shaders or pipelines."
              echo "::set-output name=run_job::false"
              break
            else
              echo "::set-output name=run_job::true"
            fi
          done < files.txt
          
  release:
    needs: check
    if: needs.check.outputs.run_job == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          # choose node.js version to use
          node-version: '16'

      # run build script
      - name: Output shaders
        run: node release.js

      - name: Zip shaders
        run: zip -q -r -9 "shaders.zip" shaderCache

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H%M')"

      - uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: tag-${{ steps.date.outputs.date }}
          name: shaders-${{ steps.date.outputs.date }}
          gzip: false
          files: shaders.zip
